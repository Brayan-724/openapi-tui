/*
 * OpenAPI v3.1.0 Specification
 *
 * OpenAPI inside OpenAPI
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Encoding {
    #[serde(rename = "contentType", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content_type: Option<Option<serde_json::Value>>,
    #[serde(rename = "headers", skip_serializing_if = "Option::is_none")]
    pub headers: Option<std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "style", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub style: Option<Option<Style>>,
    #[serde(rename = "explode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub explode: Option<Option<serde_json::Value>>,
    #[serde(rename = "allowReserved", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub allow_reserved: Option<Option<serde_json::Value>>,
}

impl Encoding {
    pub fn new() -> Encoding {
        Encoding {
            content_type: None,
            headers: None,
            style: None,
            explode: None,
            allow_reserved: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Style {
    #[serde(rename = "form")]
    Form,
    #[serde(rename = "spaceDelimited")]
    SpaceDelimited,
    #[serde(rename = "pipeDelimited")]
    PipeDelimited,
    #[serde(rename = "deepObject")]
    DeepObject,
}

impl Default for Style {
    fn default() -> Style {
        Self::Form
    }
}

